[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "qwail"
dynamic = ["version"]
description = "Just testing things out."
readme = "README.md"
requires-python = ">=3.13,<3.14"
authors = [
  { name = "Dayal Moirangthem", email = "daylmo@proton.me" }
]
dependencies = [
  "alembic>=1.16.5",
  "celery[redis]>=5.5.3",
  "fastapi[all]>=0.116.1",
  "libpass[argon2,bcrypt]>=1.9.1.post0",
  "loguru>=0.7.3",
  "psycopg[binary]>=3.2.10",
  "python-jose[cryptography]>=3.5.0",
  "sqlalchemy>=2.0.43",
]

[dependency-groups]
dev = [
  "poethepoet>=0.37.0",
  "pre-commit>=4.3.0",
]
lint = [
  "mypy>=1.17.1",
  "ruff>=0.13.0",
]
test = [
  "pytest-alembic>=0.12.1",
  "pytest-asyncio>=1.2.0",
  "pytest-benchmark>=5.1.0",
  "pytest-cov>=7.0.0",
  "pytest>=8.4.2",
]

[tool.poe]
envfile = ".env"

[tool.uv]
environments = [
  "platform_python_implementation != 'PyPy'"
]
package = false

[tool.poe.tasks]
start.help = "Start development server with hot reload"
start.cmd = "uvicorn qwail.main:app --reload"

test.cmd="pytest --reuse-db"
test.help = "Run tests with db reuse to speed up testing time"

[tool.hatch.version]
path = "qwail/__init__.py"

[tool.mypy]
allow_untyped_globals = true
allow_redefinition = true
check_untyped_defs = true
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_context = true
show_traceback = true
warn_redundant_casts = true
warn_unused_ignores = true
plugins = ["pydantic.mypy"]
exclude = ["tests/"]

[[tool.mypy.overrides]]
module = ["qwail.*.migrations.*"]
ignore_errors = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.ruff]
target-version = "py313"

[tool.ruff.lint]
select = [
  "ASYNC",
  "B",
  "C4",
  "D",
  "DTZ",
  "E",
  "F",
  "FURB",
  "G",
  "I",
  "ISC001",
  "ISC002",
  "LOG",
  "PGH",
  "PIE",
  "PT",
  "PYI",
  "RET",
  "T20",
  "UP",
  "W",
]
ignore = [
  "B009",  # Do not call getattr with a constant value
  "B010",  # Do not call setattr with a constant value
  "B023",  # Function definition does not bind loop variable
  "D100",  # Missing docstring in public module
  "D101",  # Missing docstring in public class
  "D102",  # Missing docstring in public method
  "D103",  # Missing docstring in public function
  "D104",  # Missing docstring in public package
  "D105",  # Missing docstring in magic method
  "D106",  # Missing docstring in public nested class
  "D107",  # Missing docstring in __init__
  "D202",  # No blank lines allowed after function docstring
  "D203",  # 1 blank line required before class docstring
  "D206",  # Docstring should be indented with spaces, not tabs
  "D213",  # Multi-line docstring summary should start at the second line
  "D407",  # Missing dashed underline after section
  "E501",  # Line too long
  "PT019",  # Fixture without value is injected as parameter, use @pytest.mark.usefixtures instead
  "PYI041",  # Use `float` instead of `int | float`
  "RET504",  # Unnecessary assignment before return statement
  "UP046",  # Parameter syntax for generic classes; not supported by mypy: https://github.com/python/mypy/issues/18507
]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.isort]
known-first-party = ["qwail"]
